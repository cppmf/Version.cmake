#ifndef @INCLUDE_GUARD_NAME@
#define @INCLUDE_GUARD_NAME@

// Generated from test_version.h.in

// @PROJECT_NAME@ name.
#define @BASE_NAME_UPPER@_NAME "@PROJECT_NAME@"

// @PROJECT_NAME@ major version
#define @BASE_NAME_UPPER@_VERSION_MAJOR @VERSION_MAJOR@

// @PROJECT_NAME@ minor version
#define @BASE_NAME_UPPER@_VERSION_MINOR @VERSION_MINOR@

// @PROJECT_NAME@ patch version
#define @BASE_NAME_UPPER@_VERSION_PATCH @VERSION_PATCH@

// @PROJECT_NAME@ revision
#define @BASE_NAME_UPPER@_VERSION_REVISION @VERSION_REVISION@

// @PROJECT_NAME@ version name
#define @BASE_NAME_UPPER@_VERSION_NAME "@VERSION_NAME@"

#ifndef @BASE_NAME_UPPER@_TO_STRING
#define @BASE_NAME_UPPER@_TO_STRING_IMPL(x) #x
#define @BASE_NAME_UPPER@_TO_STRING(x) @BASE_NAME_UPPER@_TO_STRING_IMPL(x)
#endif

// String literal representation of the current version
#define @BASE_NAME_UPPER@_VERSION_STRING \
        @BASE_NAME_UPPER@_TO_STRING(@BASE_NAME_UPPER@_VERSION_MAJOR) "." \
        @BASE_NAME_UPPER@_TO_STRING(@BASE_NAME_UPPER@_VERSION_MINOR) "." \
        @BASE_NAME_UPPER@_TO_STRING(@BASE_NAME_UPPER@_VERSION_PATCH)

// Numerically encoded version, eg. v1.2.3 is 0x010203
#define @BASE_NAME_UPPER@_VERSION ((@BASE_NAME_UPPER@_VERSION_MAJOR << 16) |  \
       (@BASE_NAME_UPPER@_VERSION_MINOR <<  8) |  \
       (@BASE_NAME_UPPER@_VERSION_PATCH <<  0))

#endif /* @INCLUDE_GUARD_NAME@ */